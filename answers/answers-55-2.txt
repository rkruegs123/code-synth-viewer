participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,122964102.487715,Complete the implementation of a function named isEmpty in the class GasTank that accepts no parameters and returns a boolean value: true if the value of amount is less than 0.1, and false otherwise.,bool GasTank::isEmpty() {
	if (/* YOUR CODE HERE */ ex) {
		return true;
	} else {
		return false;
	}
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,123038755.747038,Complete the implementation of a function named isEmpty in the class GasTank that accepts no parameters and returns a boolean value: true if the value of amount is less than 0.1, and false otherwise.,bool GasTank::isEmpty() {
	if (condition) {
		return true;
	} else {
		return false;
	}
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,160379537.351954,Complete the implementation of a function average() that accepts one parameter, vector<int> nums, and returns the average of nums</int>,double average(vector<int> nums) {
	double temp = 0;
	/* YOUR CODE HERE */
  	int sum = 0;
  	for (int i = 0; i < nums.size(); ++i) {
      
    }
	
	return temp;
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,160459917.172584,Complete the implementation of a function average() that accepts one parameter, vector<int> nums, and returns the average of nums</int>,double average(vector<int> nums) {
	double temp = 0;
	/* YOUR CODE HERE */
  	for (int i = 0; i < nums.size(); ++i) {
      temp += nums[i];
    }
	
	return temp / nums.size();
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,160785476.156522,Complete the implementation of a function equalsFive that accepts one parameter, int x, and returns true if the value equals 5 and false otherwise,bool equalsFive(int x) {
	if(condition){
		return true;
	} else {
		return false;
	}
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,161922991.889727,This space will be used for code and prose specification throughout the experiment. Shown is an example of the text editor's C++ highlighting capabilities.,void basicFunction() {
	* YOUR CODE HERE */
	
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,161983189.367275,This space will be used for code and prose specification throughout the experiment. Shown is an example of the text editor's C++ highlighting capabilities.,void exampleFunction() {
	/* YOUR CODE HERE */
  	double my_var = 10.5;
  	return my_var * 10;
}
,14,5000,30000
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
participant-id,category,timestamp,prompt,answer,stimulus-id,previous-delay,stimulus_time
55,2,169814766.737504,Complete the implementation of a function equalsFive() that accepts one parameter, int x, and returns true if the value equals 5 and false otherwise,bool equalsFive(int x) {
	if (x == 5) {
		return true;
	} else {
		return false;
	}
}
,14,5000,30000
