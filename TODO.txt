-change stimulus time back to 30000
-change jitter time back to 2-10 secs
-change each interblock message to take an = instead of a 2

-look around latek repository, see if you can build pdf
-make sure can start cursor position at appropriate place
-make each only have one blank
-tab... add newline
-check for psych/medical imaging papers for diff brain activations on diff parts of speech
-Check ESL for long answer/prompt type questions (run through refiner)
	-otherwise come up with cookbook recipe for how analogies were drawn from
-anonymize stimuli
-seed random number generator (so must put on server side)

2/15/2018

 - Update coding fill in the blanks s.t. there is code before/after blank
 - Email Phillipines group about source of analogies
 - Email the author of "Nonmath Analogies" for how they produced them
 - Use NLTK to investigate stemming and expected usage in analogies
 - Find source of real SAT/GRE exams
-1st run: get list using stemming. 2nd run: find most general uses of words based on part of speech? Verb?
-maybe separate sources of files?
	-should do this with current sat

 - prevent recording keystrokes while fixation shows

 





Disable typing during rest period
    blur()
How does .delay call work with async/sync/timing??????

Ryan TODO for next week:
prevent recording keystrokes while fixation shows
create mapping from types of task
    e.g., natural language loop to programming loop

2/8/2018
X-finish stimuli
X-csv format answers.txt
-random time for plus.png... generate random sequence of numbers to wait on server side
X-command line argument for participant ID in test.js (then can get rid of use in call to start in HTML)
-check 32 bit vs 64 bit for shuffle_seed (ultra low priority)

Ask fMRI Ryan about:
    - when exactly will '=' be sent?  We need 3 minutes of anatomical
      scanning, maybe
    - Do multiple '='s get sent? e.g., do we know when the scan is
      complete?
    
    - preference: separate anatomical scan...  start up test.js after
      anatomical scan is complete, wait for new '='

(waiting for response)


figure out textarea selection highlighting, restrict to a single blank
 (FIXME for 2/15)


automate opening everything

concept:

nodejs test.js participant-id
firefox another_test2.html

check out Alt-tab prevention



x change test.js to take participant-id from command line, produce:

x keystrokes-$ID.txt
x answers-$ID.txt


x change answers.txt format to csv
  articipant-id,category,timestamp,prompt,answer,stimulus-id



consider changing now('milli') to some better representation of time;
prefer milliseconds since epoch

 
